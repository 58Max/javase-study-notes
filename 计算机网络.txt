# TCP连接

tcp连接采用的是客户端-服务端的模式（c-s）

tcp连接的可以看做端口间的连接成为套接字socket和socketAPI的socket不同，（IP：PORT）



TCP报文段的首部分为固定部分和选项部分，固定部分长20byte，而选项部分长度可变。（若整个首部长度不是4byte的整数倍的话，则需要用填充位来填充）在固定首部中，与本文密切相关的是以下几项：
seq（序号）：TCP连接字节流中每一个字节都会有一个编号，而本字段的值指的是本报文段所发送数据部分第一个字节的序号。
ack（确认号）：表示期望收到的下一个报文段数据部分的第一个字节的编号，编号为ack-1及以前的字节已经收到。
SYN：当本字段为1时，表示这是一个连接请求或者连接接受报文。
ACK：仅当本字段为1时，确认号才有效。
FIN：用来释放一个连接。当本字段为1时，表示此报文段的发送端数据已发送完毕，要求释放运输连接。

![image-20200726172134419](C:\Users\58max\AppData\Roaming\Typora\typora-user-images\image-20200726172134419.png)



我们称主动发起请求的应用进程叫做客户端，被动等待的应用进程叫做服务器



三次握手（连接建立阶段），四次挥手（连接释放阶段）



连接建立阶段

三次握手

1.客户端的应用进程主动向服务器端发送请求 SYN=1.seq=x

2、服务端的应用程序被动打开，如果同意请求的话向客户端发送 SYN=1，seq=y，ACK=1,ack=x+1;

3.当客户端收到,会通知上层应用已经连接，并再次向服务端发送告诉服务端已确认，ACk=1.seq = x+1.ack

=y+1此时服务端也会告诉她的上层应用连接已确认。就可以传输数据了

![image-20200726124553904](C:\Users\58max\AppData\Roaming\Typora\typora-user-images\image-20200726124553904.png)



连接释放阶段

四次挥手

1.数据发送结束后，客户端不再发送数据就会向服务端发送释放报文，并停止发送数据，报文首部FIN=1,seq=u。

2.当服务器收到连接释放的报文的时候，发出确认报文，其首部：ack=u+1,seq=v.此时本次连接就进入了半关闭状态，客户端不再向服务器发送数据。而服务端仍会继续发送。

3.如果服务器没有要向客户端发送的数据，其应用进程就通知服务器释放TCP连接。这个阶段服务器发送的最后的一个报文收不应为 FIN=1，ACK=1，seq=w,ack=u+1;

4.客户端收到连接释放报文段后，必须确认：ACK=1,seq=u+1,ack=w+1.在经过2masl后，本次TCP连接正式结束

![image-20200726172926980](C:\Users\58max\AppData\Roaming\Typora\typora-user-images\image-20200726172926980.png)



## SYN攻击

- 什么是 SYN 攻击（SYN Flood）？

  在三次握手过程中，服务器发送 SYN-ACK 之后，收到客户端的 ACK 之前的 TCP 连接称为半连接(half-open connect)。此时服务器处于 SYN_RCVD 状态。当收到 ACK 后，服务器才能转入 ESTABLISHED 状态.

  SYN 攻击指的是，攻击客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送SYN包，服务器回复确认包，并等待客户的确认。由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，导致目标系统运行缓慢，严重者会引起网络堵塞甚至系统瘫痪。

  SYN 攻击是一种典型的 DoS/DDoS 攻击。

- 如何检测 SYN 攻击？

  检测 SYN 攻击非常的方便，当你在服务器上看到大量的半连接状态时，特别是源IP地址是随机的，基本上可以断定这是一次SYN攻击。在 Linux/Unix 上可以使用系统自带的 netstats 命令来检测 SYN 攻击。

- 如何防御 SYN 攻击？

  SYN攻击不能完全被阻止，除非将TCP协议重新设计。我们所做的是尽可能的减轻SYN攻击的危害，常见的防御 SYN 攻击的方法有如下几种：

  - 缩短超时（SYN Timeout）时间
  - 增加最大半连接数
  - 过滤网关防护
  - SYN cookies技术