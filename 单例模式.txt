//单例模式的产生是为了当一段较长的代码重复使用多次时，避免内存空间的浪费和代码书写的大量重复产生的模式。两种单例模式都只使用了同一个对象
//单例模式之饿汉模式
public class SingleHunger {
    private SingleHunger(){}
    private static SingleHunger  singleHunger = new SingleHunger();
    public static SingleHunger setSingleHunger(){
        return singleHunger;
    }
}
//单例模式之懒汉模式
public class SingleLazy {
    private SingleLazy(){}
    private static SingleLazy singleLazy = null;
    public static SingleLazy setSingleLazy(){
        if(singleLazy==null){
            singleLazy = new SingleLazy();
        }
        return singleLazy;
    }
}
